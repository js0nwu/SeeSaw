function [p1sitnoiset1476900172992ssensorData, sensor] = readExperimentData(filename, startRow, endRow)
%IMPORTFILE Import numeric data from a text file as a matrix.
%   P1SITNOISET1476900172992SSENSORDATA = IMPORTFILE(FILENAME) Reads data
%   from text file FILENAME for the default selection.
%
%   P1SITNOISET1476900172992SSENSORDATA = IMPORTFILE(FILENAME, STARTROW,
%   ENDROW) Reads data from rows STARTROW through ENDROW of text file
%   FILENAME.
%
% Example:
%   p1sitnoiset1476900172992ssensorData = importfile('p1_sitnoise_t1476900172992_ssensorData.csv', 1, 6504);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2016/10/20 10:21:31

sensor_names = {'magnet','accel','gyro'};


%% Initialize variables.
delimiter = ',';
if nargin<=2
    startRow = 1;
    endRow = inf;
end

%% Format string for each line of text:
%   column1: double (%f)
%	column2: text (%s)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%s%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', delimiter, 'EmptyValue' ,NaN,'HeaderLines', startRow(1)-1, 'ReturnOnError', false);
for block=2:length(startRow)
    frewind(fileID);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', delimiter, 'EmptyValue' ,NaN,'HeaderLines', startRow(block)-1, 'ReturnOnError', false);
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Create output variable
dataArray([1, 3, 4, 5, 6]) = cellfun(@(x) num2cell(x), dataArray([1, 3, 4, 5, 6]), 'UniformOutput', false);
p1sitnoiset1476900172992ssensorData = [dataArray{1:end-1}];

for i=length(sensor_names):-1:1
    sensor(i).name = sensor_names{i};
    idx = strcmp(p1sitnoiset1476900172992ssensorData(:,2),{sensor(i).name});
    sensor(i).time1 = cell2mat(p1sitnoiset1476900172992ssensorData(idx,1));
    sensor(i).time2 = cell2mat(p1sitnoiset1476900172992ssensorData(idx,6));
    sensor(i).xyz = cell2mat(p1sitnoiset1476900172992ssensorData(idx,[3:5]));
    sensor(i).norm = sqrt(sum([sensor(i).xyz(:,1).^2, sensor(i).xyz(:,2).^2, sensor(i).xyz(:,3).^2],2));
end
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    